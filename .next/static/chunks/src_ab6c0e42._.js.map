{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/types/bookkeeping.ts"],"sourcesContent":["export interface Transaction {\n  id: string;\n  date: string;\n  description: string;\n  debitAccount: string;\n  creditAccount: string;\n  amount: number;\n  category: TransactionCategory;\n  reference?: string;\n}\n\nexport enum TransactionCategory {\n  ASSET = 'asset',\n  LIABILITY = 'liability',\n  EQUITY = 'equity',\n  REVENUE = 'revenue',\n  EXPENSE = 'expense',\n  COST_OF_GOODS_SOLD = 'cost_of_goods_sold'\n}\n\nexport enum AccountType {\n  CURRENT_ASSET = 'current_asset',\n  FIXED_ASSET = 'fixed_asset',\n  CURRENT_LIABILITY = 'current_liability',\n  LONG_TERM_LIABILITY = 'long_term_liability',\n  EQUITY = 'equity',\n  REVENUE = 'revenue',\n  EXPENSE = 'expense',\n  COST_OF_GOODS_SOLD = 'cost_of_goods_sold'\n}\n\nexport interface Account {\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BalanceSheetData {\n  assets: {\n    currentAssets: Account[];\n    fixedAssets: Account[];\n    totalAssets: number;\n  };\n  liabilities: {\n    currentLiabilities: Account[];\n    longTermLiabilities: Account[];\n    totalLiabilities: number;\n  };\n  equity: {\n    equityAccounts: Account[];\n    totalEquity: number;\n  };\n}\n\nexport interface TradingAccountData {\n  sales: number;\n  costOfGoodsSold: number;\n  grossProfit: number;\n}\n\nexport interface ProfitLossData {\n  grossProfit: number;\n  operatingExpenses: Account[];\n  totalExpenses: number;\n  netProfit: number;\n}\n\nexport interface DashboardMetrics {\n  totalAssets: number;\n  totalLiabilities: number;\n  totalEquity: number;\n  netProfit: number;\n  grossProfit: number;\n  totalTransactions: number;\n}\n"],"names":[],"mappings":";;;;AAWO,IAAA,AAAK,6CAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,qCAAA;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/bookkeeping-utils.ts"],"sourcesContent":["import { Transaction, Account, AccountType, BalanceSheetData, TradingAccountData, ProfitLossData, DashboardMetrics, TransactionCategory } from '@/types/bookkeeping';\n\nexport class BookkeepingService {\n  private static STORAGE_KEY = 'bookkeeping_transactions';\n\n  static getTransactions(): Transaction[] {\n    if (typeof window === 'undefined') return [];\n    const stored = localStorage.getItem(this.STORAGE_KEY);\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  static saveTransaction(transaction: Transaction): void {\n    const transactions = this.getTransactions();\n    const existingIndex = transactions.findIndex(t => t.id === transaction.id);\n    \n    if (existingIndex >= 0) {\n      transactions[existingIndex] = transaction;\n    } else {\n      transactions.push(transaction);\n    }\n    \n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(transactions));\n  }\n\n  static deleteTransaction(id: string): void {\n    const transactions = this.getTransactions().filter(t => t.id !== id);\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(transactions));\n  }\n\n  static calculateAccountBalances(): Map<string, number> {\n    const transactions = this.getTransactions();\n    const balances = new Map<string, number>();\n\n    transactions.forEach(transaction => {\n      // Debit increases the account balance\n      const currentDebitBalance = balances.get(transaction.debitAccount) || 0;\n      balances.set(transaction.debitAccount, currentDebitBalance + transaction.amount);\n\n      // Credit decreases the account balance (or increases if it's a liability/equity/revenue)\n      const currentCreditBalance = balances.get(transaction.creditAccount) || 0;\n      balances.set(transaction.creditAccount, currentCreditBalance - transaction.amount);\n    });\n\n    return balances;\n  }\n\n  static getBalanceSheet(): BalanceSheetData {\n    const balances = this.calculateAccountBalances();\n    const accounts: Account[] = [];\n\n    balances.forEach((balance, accountName) => {\n      const accountType = this.getAccountType(accountName);\n      accounts.push({ name: accountName, type: accountType, balance });\n    });\n\n    const currentAssets = accounts.filter(a => a.type === AccountType.CURRENT_ASSET);\n    const fixedAssets = accounts.filter(a => a.type === AccountType.FIXED_ASSET);\n    const currentLiabilities = accounts.filter(a => a.type === AccountType.CURRENT_LIABILITY);\n    const longTermLiabilities = accounts.filter(a => a.type === AccountType.LONG_TERM_LIABILITY);\n    const equityAccounts = accounts.filter(a => a.type === AccountType.EQUITY);\n\n    const totalAssets = [...currentAssets, ...fixedAssets].reduce((sum, a) => sum + Math.abs(a.balance), 0);\n    const totalLiabilities = [...currentLiabilities, ...longTermLiabilities].reduce((sum, a) => sum + Math.abs(a.balance), 0);\n    const totalEquity = equityAccounts.reduce((sum, a) => sum + Math.abs(a.balance), 0);\n\n    return {\n      assets: { currentAssets, fixedAssets, totalAssets },\n      liabilities: { currentLiabilities, longTermLiabilities, totalLiabilities },\n      equity: { equityAccounts, totalEquity }\n    };\n  }\n\n  static getTradingAccount(): TradingAccountData {\n    const transactions = this.getTransactions();\n    \n    const sales = transactions\n      .filter(t => t.category === TransactionCategory.REVENUE)\n      .reduce((sum, t) => sum + t.amount, 0);\n\n    const costOfGoodsSold = transactions\n      .filter(t => t.category === TransactionCategory.COST_OF_GOODS_SOLD)\n      .reduce((sum, t) => sum + t.amount, 0);\n\n    const grossProfit = sales - costOfGoodsSold;\n\n    return { sales, costOfGoodsSold, grossProfit };\n  }\n\n  static getProfitLoss(): ProfitLossData {\n    const tradingAccount = this.getTradingAccount();\n    const balances = this.calculateAccountBalances();\n    const operatingExpenses: Account[] = [];\n\n    balances.forEach((balance, accountName) => {\n      const accountType = this.getAccountType(accountName);\n      if (accountType === AccountType.EXPENSE) {\n        operatingExpenses.push({ name: accountName, type: accountType, balance: Math.abs(balance) });\n      }\n    });\n\n    const totalExpenses = operatingExpenses.reduce((sum, a) => sum + a.balance, 0);\n    const netProfit = tradingAccount.grossProfit - totalExpenses;\n\n    return {\n      grossProfit: tradingAccount.grossProfit,\n      operatingExpenses,\n      totalExpenses,\n      netProfit\n    };\n  }\n\n  static getDashboardMetrics(): DashboardMetrics {\n    const balanceSheet = this.getBalanceSheet();\n    const profitLoss = this.getProfitLoss();\n    const tradingAccount = this.getTradingAccount();\n    const transactions = this.getTransactions();\n\n    return {\n      totalAssets: balanceSheet.assets.totalAssets,\n      totalLiabilities: balanceSheet.liabilities.totalLiabilities,\n      totalEquity: balanceSheet.equity.totalEquity,\n      netProfit: profitLoss.netProfit,\n      grossProfit: tradingAccount.grossProfit,\n      totalTransactions: transactions.length\n    };\n  }\n\n  private static getAccountType(accountName: string): AccountType {\n    const name = accountName.toLowerCase();\n    \n    if (name.includes('cash') || name.includes('bank') || name.includes('receivable') || name.includes('inventory')) {\n      return AccountType.CURRENT_ASSET;\n    }\n    if (name.includes('equipment') || name.includes('building') || name.includes('land') || name.includes('furniture')) {\n      return AccountType.FIXED_ASSET;\n    }\n    if (name.includes('payable') || name.includes('accrued') || name.includes('short')) {\n      return AccountType.CURRENT_LIABILITY;\n    }\n    if (name.includes('loan') || name.includes('mortgage') || name.includes('bond')) {\n      return AccountType.LONG_TERM_LIABILITY;\n    }\n    if (name.includes('capital') || name.includes('equity') || name.includes('retained')) {\n      return AccountType.EQUITY;\n    }\n    if (name.includes('sales') || name.includes('revenue') || name.includes('income')) {\n      return AccountType.REVENUE;\n    }\n    if (name.includes('cost') || name.includes('cogs')) {\n      return AccountType.COST_OF_GOODS_SOLD;\n    }\n    \n    return AccountType.EXPENSE;\n  }\n\n  static formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/transaction-form.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { Transaction, TransactionCategory } from '@/types/bookkeeping';\n\ninterface TransactionFormProps {\n  transaction?: Transaction;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport default function TransactionForm({ transaction, onClose, onSave }: TransactionFormProps) {\n  const [formData, setFormData] = useState<Partial<Transaction>>({\n    id: transaction?.id || crypto.randomUUID(),\n    date: transaction?.date || new Date().toISOString().split('T')[0],\n    description: transaction?.description || '',\n    debitAccount: transaction?.debitAccount || '',\n    creditAccount: transaction?.creditAccount || '',\n    amount: transaction?.amount || 0,\n    category: transaction?.category || TransactionCategory.EXPENSE,\n    reference: transaction?.reference || ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.description?.trim()) {\n      newErrors.description = 'Description is required';\n    }\n    if (!formData.debitAccount?.trim()) {\n      newErrors.debitAccount = 'Debit account is required';\n    }\n    if (!formData.creditAccount?.trim()) {\n      newErrors.creditAccount = 'Credit account is required';\n    }\n    if (!formData.amount || formData.amount <= 0) {\n      newErrors.amount = 'Amount must be greater than 0';\n    }\n    if (formData.debitAccount === formData.creditAccount) {\n      newErrors.creditAccount = 'Credit account must be different from debit account';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    const transactionData: Transaction = {\n      id: formData.id!,\n      date: formData.date!,\n      description: formData.description!,\n      debitAccount: formData.debitAccount!,\n      creditAccount: formData.creditAccount!,\n      amount: formData.amount!,\n      category: formData.category!,\n      reference: formData.reference\n    };\n\n    BookkeepingService.saveTransaction(transactionData);\n    onSave();\n  };\n\n  const commonAccounts = [\n    'Cash',\n    'Bank Account',\n    'Accounts Receivable',\n    'Inventory',\n    'Equipment',\n    'Accounts Payable',\n    'Owner\\'s Capital',\n    'Sales Revenue',\n    'Cost of Goods Sold',\n    'Rent Expense',\n    'Utilities Expense',\n    'Salary Expense',\n    'Office Supplies',\n    'Marketing Expense'\n  ];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <Card className=\"w-full max-w-md max-h-[90vh] overflow-y-auto\">\n        <CardHeader>\n          <CardTitle>{transaction ? 'Edit Transaction' : 'Add New Transaction'}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"date\">Date</Label>\n              <Input\n                id=\"date\"\n                type=\"date\"\n                value={formData.date}\n                onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n                className=\"mt-1\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"description\">Description *</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                className={`mt-1 ${errors.description ? 'border-red-500' : ''}`}\n                placeholder=\"Enter transaction description\"\n              />\n              {errors.description && <p className=\"text-red-500 text-sm mt-1\">{errors.description}</p>}\n            </div>\n\n            <div>\n              <Label htmlFor=\"amount\">Amount *</Label>\n              <Input\n                id=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.amount}\n                onChange={(e) => setFormData({ ...formData, amount: parseFloat(e.target.value) || 0 })}\n                className={`mt-1 ${errors.amount ? 'border-red-500' : ''}`}\n                placeholder=\"0.00\"\n              />\n              {errors.amount && <p className=\"text-red-500 text-sm mt-1\">{errors.amount}</p>}\n            </div>\n\n            <div>\n              <Label htmlFor=\"category\">Category</Label>\n              <Select\n                value={formData.category}\n                onValueChange={(value) => setFormData({ ...formData, category: value as TransactionCategory })}\n              >\n                <SelectTrigger className=\"mt-1\">\n                  <SelectValue placeholder=\"Select category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value={TransactionCategory.ASSET}>Asset</SelectItem>\n                  <SelectItem value={TransactionCategory.LIABILITY}>Liability</SelectItem>\n                  <SelectItem value={TransactionCategory.EQUITY}>Equity</SelectItem>\n                  <SelectItem value={TransactionCategory.REVENUE}>Revenue</SelectItem>\n                  <SelectItem value={TransactionCategory.EXPENSE}>Expense</SelectItem>\n                  <SelectItem value={TransactionCategory.COST_OF_GOODS_SOLD}>Cost of Goods Sold</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"debitAccount\">Debit Account *</Label>\n              <Select\n                value={formData.debitAccount}\n                onValueChange={(value) => setFormData({ ...formData, debitAccount: value })}\n              >\n                <SelectTrigger className={`mt-1 ${errors.debitAccount ? 'border-red-500' : ''}`}>\n                  <SelectValue placeholder=\"Select debit account\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {commonAccounts.map((account) => (\n                    <SelectItem key={account} value={account}>{account}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {errors.debitAccount && <p className=\"text-red-500 text-sm mt-1\">{errors.debitAccount}</p>}\n            </div>\n\n            <div>\n              <Label htmlFor=\"creditAccount\">Credit Account *</Label>\n              <Select\n                value={formData.creditAccount}\n                onValueChange={(value) => setFormData({ ...formData, creditAccount: value })}\n              >\n                <SelectTrigger className={`mt-1 ${errors.creditAccount ? 'border-red-500' : ''}`}>\n                  <SelectValue placeholder=\"Select credit account\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {commonAccounts.map((account) => (\n                    <SelectItem key={account} value={account}>{account}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {errors.creditAccount && <p className=\"text-red-500 text-sm mt-1\">{errors.creditAccount}</p>}\n            </div>\n\n            <div>\n              <Label htmlFor=\"reference\">Reference</Label>\n              <Input\n                id=\"reference\"\n                value={formData.reference}\n                onChange={(e) => setFormData({ ...formData, reference: e.target.value })}\n                className=\"mt-1\"\n                placeholder=\"Invoice number, check number, etc.\"\n              />\n            </div>\n\n            <div className=\"flex gap-2 pt-4\">\n              <Button type=\"submit\" className=\"flex-1\">\n                {transaction ? 'Update' : 'Save'} Transaction\n              </Button>\n              <Button type=\"button\" variant=\"outline\" onClick={onClose} className=\"flex-1\">\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1380, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/transaction-list.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { Transaction } from '@/types/bookkeeping';\nimport TransactionForm from './transaction-form';\n\ninterface TransactionListProps {\n  onDataChange: () => void;\n}\n\nexport default function TransactionList({ onDataChange }: TransactionListProps) {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [filteredTransactions, setFilteredTransactions] = useState<Transaction[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editingTransaction, setEditingTransaction] = useState<Transaction | null>(null);\n\n  const loadTransactions = () => {\n    const data = BookkeepingService.getTransactions();\n    setTransactions(data);\n    setFilteredTransactions(data);\n  };\n\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n\n  useEffect(() => {\n    const filtered = transactions.filter(transaction =>\n      transaction.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      transaction.debitAccount.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      transaction.creditAccount.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      transaction.reference?.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredTransactions(filtered);\n  }, [searchTerm, transactions]);\n\n  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this transaction?')) {\n      BookkeepingService.deleteTransaction(id);\n      loadTransactions();\n      onDataChange();\n    }\n  };\n\n  const handleEdit = (transaction: Transaction) => {\n    setEditingTransaction(transaction);\n  };\n\n  const handleSave = () => {\n    setEditingTransaction(null);\n    loadTransactions();\n    onDataChange();\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      asset: 'bg-blue-100 text-blue-800',\n      liability: 'bg-red-100 text-red-800',\n      equity: 'bg-green-100 text-green-800',\n      revenue: 'bg-purple-100 text-purple-800',\n      expense: 'bg-orange-100 text-orange-800',\n      cost_of_goods_sold: 'bg-yellow-100 text-yellow-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n          <CardTitle>Transaction History</CardTitle>\n          <Input\n            placeholder=\"Search transactions...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full sm:w-64\"\n          />\n        </div>\n      </CardHeader>\n      <CardContent>\n        {filteredTransactions.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            {searchTerm ? 'No transactions found matching your search.' : 'No transactions yet. Add your first transaction to get started.'}\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead className=\"min-w-[100px]\">Date</TableHead>\n                  <TableHead className=\"min-w-[200px]\">Description</TableHead>\n                  <TableHead className=\"min-w-[120px]\">Debit Account</TableHead>\n                  <TableHead className=\"min-w-[120px]\">Credit Account</TableHead>\n                  <TableHead className=\"min-w-[100px] text-right\">Amount</TableHead>\n                  <TableHead className=\"min-w-[100px]\">Category</TableHead>\n                  <TableHead className=\"min-w-[100px]\">Reference</TableHead>\n                  <TableHead className=\"min-w-[120px]\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredTransactions.map((transaction) => (\n                  <TableRow key={transaction.id}>\n                    <TableCell className=\"font-medium\">\n                      {new Date(transaction.date).toLocaleDateString()}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"max-w-[200px] truncate\" title={transaction.description}>\n                        {transaction.description}\n                      </div>\n                    </TableCell>\n                    <TableCell>{transaction.debitAccount}</TableCell>\n                    <TableCell>{transaction.creditAccount}</TableCell>\n                    <TableCell className=\"text-right font-medium\">\n                      {BookkeepingService.formatCurrency(transaction.amount)}\n                    </TableCell>\n                    <TableCell>\n                      <Badge className={getCategoryColor(transaction.category)}>\n                        {transaction.category.replace('_', ' ').toUpperCase()}\n                      </Badge>\n                    </TableCell>\n                    <TableCell>{transaction.reference || '-'}</TableCell>\n                    <TableCell>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleEdit(transaction)}\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleDelete(transaction.id)}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n\n        {editingTransaction && (\n          <TransactionForm\n            transaction={editingTransaction}\n            onClose={() => setEditingTransaction(null)}\n            onSave={handleSave}\n          />\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1932, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/balance-sheet.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { BalanceSheetData } from '@/types/bookkeeping';\n\nexport default function BalanceSheet() {\n  const [balanceSheetData, setBalanceSheetData] = useState<BalanceSheetData>({\n    assets: { currentAssets: [], fixedAssets: [], totalAssets: 0 },\n    liabilities: { currentLiabilities: [], longTermLiabilities: [], totalLiabilities: 0 },\n    equity: { equityAccounts: [], totalEquity: 0 }\n  });\n\n  useEffect(() => {\n    const data = BookkeepingService.getBalanceSheet();\n    setBalanceSheetData(data);\n  }, []);\n\n  const formatCurrency = (amount: number) => BookkeepingService.formatCurrency(Math.abs(amount));\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-center text-2xl\">Balance Sheet</CardTitle>\n          <p className=\"text-center text-gray-600\">As of {new Date().toLocaleDateString()}</p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Assets Section */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-blue-700 border-b-2 border-blue-200 pb-2\">\n                ASSETS\n              </h3>\n              \n              {/* Current Assets */}\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Current Assets</h4>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableBody>\n                      {balanceSheetData.assets.currentAssets.map((asset, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{asset.name}</TableCell>\n                          <TableCell className=\"text-right\">{formatCurrency(asset.balance)}</TableCell>\n                        </TableRow>\n                      ))}\n                      {balanceSheetData.assets.currentAssets.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                            No current assets\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n\n              {/* Fixed Assets */}\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Fixed Assets</h4>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableBody>\n                      {balanceSheetData.assets.fixedAssets.map((asset, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{asset.name}</TableCell>\n                          <TableCell className=\"text-right\">{formatCurrency(asset.balance)}</TableCell>\n                        </TableRow>\n                      ))}\n                      {balanceSheetData.assets.fixedAssets.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                            No fixed assets\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n\n              {/* Total Assets */}\n              <div className=\"border-t-2 border-blue-200 pt-2\">\n                <div className=\"flex justify-between items-center font-bold text-lg\">\n                  <span>TOTAL ASSETS</span>\n                  <span className=\"text-blue-700\">{formatCurrency(balanceSheetData.assets.totalAssets)}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Liabilities & Equity Section */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-red-700 border-b-2 border-red-200 pb-2\">\n                LIABILITIES & EQUITY\n              </h3>\n              \n              {/* Current Liabilities */}\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Current Liabilities</h4>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableBody>\n                      {balanceSheetData.liabilities.currentLiabilities.map((liability, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{liability.name}</TableCell>\n                          <TableCell className=\"text-right\">{formatCurrency(liability.balance)}</TableCell>\n                        </TableRow>\n                      ))}\n                      {balanceSheetData.liabilities.currentLiabilities.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                            No current liabilities\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n\n              {/* Long-term Liabilities */}\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Long-term Liabilities</h4>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableBody>\n                      {balanceSheetData.liabilities.longTermLiabilities.map((liability, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{liability.name}</TableCell>\n                          <TableCell className=\"text-right\">{formatCurrency(liability.balance)}</TableCell>\n                        </TableRow>\n                      ))}\n                      {balanceSheetData.liabilities.longTermLiabilities.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                            No long-term liabilities\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n\n              {/* Total Liabilities */}\n              <div className=\"border-t border-gray-200 pt-2\">\n                <div className=\"flex justify-between items-center font-medium\">\n                  <span>Total Liabilities</span>\n                  <span>{formatCurrency(balanceSheetData.liabilities.totalLiabilities)}</span>\n                </div>\n              </div>\n\n              {/* Equity */}\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Owner's Equity</h4>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableBody>\n                      {balanceSheetData.equity.equityAccounts.map((equity, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{equity.name}</TableCell>\n                          <TableCell className=\"text-right\">{formatCurrency(equity.balance)}</TableCell>\n                        </TableRow>\n                      ))}\n                      {balanceSheetData.equity.equityAccounts.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                            No equity accounts\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n\n              {/* Total Equity */}\n              <div className=\"border-t border-gray-200 pt-2\">\n                <div className=\"flex justify-between items-center font-medium\">\n                  <span>Total Equity</span>\n                  <span>{formatCurrency(balanceSheetData.equity.totalEquity)}</span>\n                </div>\n              </div>\n\n              {/* Total Liabilities & Equity */}\n              <div className=\"border-t-2 border-red-200 pt-2\">\n                <div className=\"flex justify-between items-center font-bold text-lg\">\n                  <span>TOTAL LIABILITIES & EQUITY</span>\n                  <span className=\"text-red-700\">\n                    {formatCurrency(balanceSheetData.liabilities.totalLiabilities + balanceSheetData.equity.totalEquity)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Balance Check */}\n          <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600 mb-2\">Balance Check:</p>\n              <div className=\"flex justify-center items-center gap-4 text-sm\">\n                <span>Assets: {formatCurrency(balanceSheetData.assets.totalAssets)}</span>\n                <span>=</span>\n                <span>Liabilities + Equity: {formatCurrency(balanceSheetData.liabilities.totalLiabilities + balanceSheetData.equity.totalEquity)}</span>\n              </div>\n              {Math.abs(balanceSheetData.assets.totalAssets - (balanceSheetData.liabilities.totalLiabilities + balanceSheetData.equity.totalEquity)) < 0.01 ? (\n                <p className=\"text-green-600 font-medium mt-2\">✓ Balance Sheet is balanced</p>\n              ) : (\n                <p className=\"text-red-600 font-medium mt-2\">⚠ Balance Sheet is not balanced</p>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2656, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/trading-account.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { TradingAccountData } from '@/types/bookkeeping';\n\nexport default function TradingAccount() {\n  const [tradingData, setTradingData] = useState<TradingAccountData>({\n    sales: 0,\n    costOfGoodsSold: 0,\n    grossProfit: 0\n  });\n\n  useEffect(() => {\n    const data = BookkeepingService.getTradingAccount();\n    setTradingData(data);\n  }, []);\n\n  const formatCurrency = (amount: number) => BookkeepingService.formatCurrency(amount);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-center text-2xl\">Trading Account</CardTitle>\n          <p className=\"text-center text-gray-600\">For the period ending {new Date().toLocaleDateString()}</p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Debit Side */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-red-700 border-b-2 border-red-200 pb-2 text-center\">\n                DEBIT\n              </h3>\n              \n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"font-semibold\">Particulars</TableHead>\n                      <TableHead className=\"text-right font-semibold\">Amount</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell className=\"font-medium\">Cost of Goods Sold</TableCell>\n                      <TableCell className=\"text-right\">{formatCurrency(tradingData.costOfGoodsSold)}</TableCell>\n                    </TableRow>\n                    \n                    {tradingData.grossProfit > 0 && (\n                      <TableRow className=\"bg-green-50\">\n                        <TableCell className=\"font-bold text-green-700\">Gross Profit c/d</TableCell>\n                        <TableCell className=\"text-right font-bold text-green-700\">\n                          {formatCurrency(tradingData.grossProfit)}\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    <TableRow className=\"border-t-2 border-gray-300\">\n                      <TableCell className=\"font-bold\">TOTAL</TableCell>\n                      <TableCell className=\"text-right font-bold\">\n                        {formatCurrency(tradingData.sales)}\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n\n            {/* Credit Side */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-green-700 border-b-2 border-green-200 pb-2 text-center\">\n                CREDIT\n              </h3>\n              \n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"font-semibold\">Particulars</TableHead>\n                      <TableHead className=\"text-right font-semibold\">Amount</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell className=\"font-medium\">Sales Revenue</TableCell>\n                      <TableCell className=\"text-right\">{formatCurrency(tradingData.sales)}</TableCell>\n                    </TableRow>\n                    \n                    {tradingData.grossProfit < 0 && (\n                      <TableRow className=\"bg-red-50\">\n                        <TableCell className=\"font-bold text-red-700\">Gross Loss c/d</TableCell>\n                        <TableCell className=\"text-right font-bold text-red-700\">\n                          {formatCurrency(Math.abs(tradingData.grossProfit))}\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    <TableRow className=\"border-t-2 border-gray-300\">\n                      <TableCell className=\"font-bold\">TOTAL</TableCell>\n                      <TableCell className=\"text-right font-bold\">\n                        {formatCurrency(tradingData.sales)}\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </div>\n\n          {/* Summary Section */}\n          <div className=\"mt-8 p-6 bg-gray-50 rounded-lg\">\n            <h4 className=\"text-lg font-semibold mb-4 text-center\">Trading Account Summary</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Total Sales</p>\n                <p className=\"text-xl font-bold text-blue-600\">{formatCurrency(tradingData.sales)}</p>\n              </div>\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Cost of Goods Sold</p>\n                <p className=\"text-xl font-bold text-red-600\">{formatCurrency(tradingData.costOfGoodsSold)}</p>\n              </div>\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Gross Profit</p>\n                <p className={`text-xl font-bold ${tradingData.grossProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                  {formatCurrency(tradingData.grossProfit)}\n                </p>\n              </div>\n            </div>\n            \n            {/* Gross Profit Margin */}\n            <div className=\"mt-4 text-center\">\n              <p className=\"text-sm text-gray-600\">Gross Profit Margin</p>\n              <p className=\"text-lg font-semibold\">\n                {tradingData.sales > 0 \n                  ? `${((tradingData.grossProfit / tradingData.sales) * 100).toFixed(2)}%`\n                  : '0.00%'\n                }\n              </p>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n            <h5 className=\"font-semibold text-blue-800 mb-2\">Notes:</h5>\n            <ul className=\"text-sm text-blue-700 space-y-1\">\n              <li>• The Trading Account shows the gross profit or loss from trading activities</li>\n              <li>• Gross Profit = Sales Revenue - Cost of Goods Sold</li>\n              <li>• This account is prepared before the Profit & Loss Account</li>\n              <li>• The gross profit/loss is carried forward to the Profit & Loss Account</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3226, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/profit-loss.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { ProfitLossData } from '@/types/bookkeeping';\n\nexport default function ProfitLoss() {\n  const [profitLossData, setProfitLossData] = useState<ProfitLossData>({\n    grossProfit: 0,\n    operatingExpenses: [],\n    totalExpenses: 0,\n    netProfit: 0\n  });\n\n  useEffect(() => {\n    const data = BookkeepingService.getProfitLoss();\n    setProfitLossData(data);\n  }, []);\n\n  const formatCurrency = (amount: number) => BookkeepingService.formatCurrency(amount);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-center text-2xl\">Profit & Loss Account</CardTitle>\n          <p className=\"text-center text-gray-600\">For the period ending {new Date().toLocaleDateString()}</p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Debit Side - Expenses */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-red-700 border-b-2 border-red-200 pb-2 text-center\">\n                DEBIT (Expenses)\n              </h3>\n              \n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"font-semibold\">Particulars</TableHead>\n                      <TableHead className=\"text-right font-semibold\">Amount</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {profitLossData.operatingExpenses.map((expense, index) => (\n                      <TableRow key={index}>\n                        <TableCell className=\"font-medium\">{expense.name}</TableCell>\n                        <TableCell className=\"text-right\">{formatCurrency(expense.balance)}</TableCell>\n                      </TableRow>\n                    ))}\n                    \n                    {profitLossData.operatingExpenses.length === 0 && (\n                      <TableRow>\n                        <TableCell colSpan={2} className=\"text-center text-gray-500\">\n                          No operating expenses recorded\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    {profitLossData.netProfit > 0 && (\n                      <TableRow className=\"bg-green-50\">\n                        <TableCell className=\"font-bold text-green-700\">Net Profit</TableCell>\n                        <TableCell className=\"text-right font-bold text-green-700\">\n                          {formatCurrency(profitLossData.netProfit)}\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    <TableRow className=\"border-t-2 border-gray-300\">\n                      <TableCell className=\"font-bold\">TOTAL</TableCell>\n                      <TableCell className=\"text-right font-bold\">\n                        {formatCurrency(Math.max(profitLossData.grossProfit, profitLossData.totalExpenses + Math.max(0, profitLossData.netProfit)))}\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n\n            {/* Credit Side - Income */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-green-700 border-b-2 border-green-200 pb-2 text-center\">\n                CREDIT (Income)\n              </h3>\n              \n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"font-semibold\">Particulars</TableHead>\n                      <TableHead className=\"text-right font-semibold\">Amount</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell className=\"font-medium\">\n                        Gross Profit b/d\n                        {profitLossData.grossProfit < 0 && \" (Loss)\"}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        {formatCurrency(Math.max(0, profitLossData.grossProfit))}\n                      </TableCell>\n                    </TableRow>\n                    \n                    {profitLossData.grossProfit < 0 && (\n                      <TableRow className=\"bg-red-50\">\n                        <TableCell className=\"font-medium text-red-700\">Gross Loss b/d</TableCell>\n                        <TableCell className=\"text-right text-red-700\">\n                          {formatCurrency(Math.abs(profitLossData.grossProfit))}\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    {profitLossData.netProfit < 0 && (\n                      <TableRow className=\"bg-red-50\">\n                        <TableCell className=\"font-bold text-red-700\">Net Loss</TableCell>\n                        <TableCell className=\"text-right font-bold text-red-700\">\n                          {formatCurrency(Math.abs(profitLossData.netProfit))}\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    \n                    <TableRow className=\"border-t-2 border-gray-300\">\n                      <TableCell className=\"font-bold\">TOTAL</TableCell>\n                      <TableCell className=\"text-right font-bold\">\n                        {formatCurrency(Math.max(profitLossData.grossProfit, profitLossData.totalExpenses + Math.max(0, profitLossData.netProfit)))}\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </div>\n\n          {/* Summary Section */}\n          <div className=\"mt-8 p-6 bg-gray-50 rounded-lg\">\n            <h4 className=\"text-lg font-semibold mb-4 text-center\">Profit & Loss Summary</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Gross Profit</p>\n                <p className={`text-xl font-bold ${profitLossData.grossProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                  {formatCurrency(profitLossData.grossProfit)}\n                </p>\n              </div>\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Total Expenses</p>\n                <p className=\"text-xl font-bold text-red-600\">{formatCurrency(profitLossData.totalExpenses)}</p>\n              </div>\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Net Profit</p>\n                <p className={`text-xl font-bold ${profitLossData.netProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                  {formatCurrency(profitLossData.netProfit)}\n                </p>\n              </div>\n              <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <p className=\"text-sm text-gray-600 mb-1\">Net Margin</p>\n                <p className=\"text-lg font-semibold\">\n                  {profitLossData.grossProfit > 0 \n                    ? `${((profitLossData.netProfit / profitLossData.grossProfit) * 100).toFixed(2)}%`\n                    : '0.00%'\n                  }\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Detailed Expenses Breakdown */}\n          {profitLossData.operatingExpenses.length > 0 && (\n            <div className=\"mt-6\">\n              <h4 className=\"text-lg font-semibold mb-4\">Operating Expenses Breakdown</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {profitLossData.operatingExpenses.map((expense, index) => (\n                  <div key={index} className=\"p-3 bg-white rounded-lg shadow-sm border\">\n                    <p className=\"text-sm text-gray-600\">{expense.name}</p>\n                    <p className=\"text-lg font-semibold text-red-600\">{formatCurrency(expense.balance)}</p>\n                    <p className=\"text-xs text-gray-500\">\n                      {profitLossData.totalExpenses > 0 \n                        ? `${((expense.balance / profitLossData.totalExpenses) * 100).toFixed(1)}% of total`\n                        : '0% of total'\n                      }\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Financial Health Indicators */}\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n            <h5 className=\"font-semibold text-blue-800 mb-3\">Financial Health Indicators</h5>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <p className=\"text-blue-700\">\n                  <strong>Profitability Status:</strong> {' '}\n                  {profitLossData.netProfit > 0 ? (\n                    <span className=\"text-green-600\">Profitable</span>\n                  ) : profitLossData.netProfit < 0 ? (\n                    <span className=\"text-red-600\">Loss Making</span>\n                  ) : (\n                    <span className=\"text-gray-600\">Break Even</span>\n                  )}\n                </p>\n                <p className=\"text-blue-700 mt-1\">\n                  <strong>Expense Ratio:</strong> {' '}\n                  {profitLossData.grossProfit > 0 \n                    ? `${((profitLossData.totalExpenses / profitLossData.grossProfit) * 100).toFixed(2)}%`\n                    : 'N/A'\n                  }\n                </p>\n              </div>\n              <div>\n                <p className=\"text-blue-700\">\n                  <strong>Total Expense Items:</strong> {profitLossData.operatingExpenses.length}\n                </p>\n                <p className=\"text-blue-700 mt-1\">\n                  <strong>Average Expense:</strong> {' '}\n                  {profitLossData.operatingExpenses.length > 0 \n                    ? formatCurrency(profitLossData.totalExpenses / profitLossData.operatingExpenses.length)\n                    : formatCurrency(0)\n                  }\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div className=\"mt-6 p-4 bg-yellow-50 rounded-lg\">\n            <h5 className=\"font-semibold text-yellow-800 mb-2\">Notes:</h5>\n            <ul className=\"text-sm text-yellow-700 space-y-1\">\n              <li>• The Profit & Loss Account shows the net profit or loss for the period</li>\n              <li>• Net Profit = Gross Profit - Operating Expenses</li>\n              <li>• This account is prepared after the Trading Account</li>\n              <li>• The net profit/loss affects the owner's equity in the Balance Sheet</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4035, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/bookkeeping/dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Button } from '@/components/ui/button';\nimport { BookkeepingService } from '@/lib/bookkeeping-utils';\nimport { DashboardMetrics } from '@/types/bookkeeping';\nimport TransactionForm from './transaction-form';\nimport TransactionList from './transaction-list';\nimport BalanceSheet from './balance-sheet';\nimport TradingAccount from './trading-account';\nimport ProfitLoss from './profit-loss';\n\nexport default function Dashboard() {\n  const [metrics, setMetrics] = useState<DashboardMetrics>({\n    totalAssets: 0,\n    totalLiabilities: 0,\n    totalEquity: 0,\n    netProfit: 0,\n    grossProfit: 0,\n    totalTransactions: 0\n  });\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\n\n  const refreshData = () => {\n    const newMetrics = BookkeepingService.getDashboardMetrics();\n    setMetrics(newMetrics);\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const MetricCard = ({ title, value, className = \"\" }: { title: string; value: number; className?: string }) => (\n    <Card className={className}>\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-sm font-medium text-gray-600\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{BookkeepingService.formatCurrency(value)}</div>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Bookkeeping Dashboard</h1>\n          <Button \n            onClick={() => setShowTransactionForm(true)}\n            className=\"w-full sm:w-auto\"\n          >\n            Add Transaction\n          </Button>\n        </div>\n\n        {/* Metrics Cards */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n          <MetricCard title=\"Total Assets\" value={metrics.totalAssets} className=\"border-l-4 border-l-blue-500\" />\n          <MetricCard title=\"Total Liabilities\" value={metrics.totalLiabilities} className=\"border-l-4 border-l-red-500\" />\n          <MetricCard title=\"Total Equity\" value={metrics.totalEquity} className=\"border-l-4 border-l-green-500\" />\n          <MetricCard title=\"Net Profit\" value={metrics.netProfit} className=\"border-l-4 border-l-purple-500\" />\n          <MetricCard title=\"Gross Profit\" value={metrics.grossProfit} className=\"border-l-4 border-l-yellow-500\" />\n          <MetricCard title=\"Total Transactions\" value={metrics.totalTransactions} className=\"border-l-4 border-l-gray-500\" />\n        </div>\n\n        {/* Main Content Tabs */}\n        <Tabs defaultValue=\"transactions\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2 lg:grid-cols-5 mb-6\">\n            <TabsTrigger value=\"transactions\" className=\"text-xs sm:text-sm\">Transactions</TabsTrigger>\n            <TabsTrigger value=\"balance-sheet\" className=\"text-xs sm:text-sm\">Balance Sheet</TabsTrigger>\n            <TabsTrigger value=\"trading\" className=\"text-xs sm:text-sm\">Trading A/c</TabsTrigger>\n            <TabsTrigger value=\"profit-loss\" className=\"text-xs sm:text-sm\">P&L</TabsTrigger>\n            <TabsTrigger value=\"reports\" className=\"text-xs sm:text-sm\">Reports</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"transactions\">\n            <TransactionList onDataChange={refreshData} />\n          </TabsContent>\n\n          <TabsContent value=\"balance-sheet\">\n            <BalanceSheet />\n          </TabsContent>\n\n          <TabsContent value=\"trading\">\n            <TradingAccount />\n          </TabsContent>\n\n          <TabsContent value=\"profit-loss\">\n            <ProfitLoss />\n          </TabsContent>\n\n          <TabsContent value=\"reports\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Financial Reports</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-600\">Advanced reporting features coming soon...</p>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Transaction Form Modal */}\n        {showTransactionForm && (\n          <TransactionForm\n            onClose={() => setShowTransactionForm(false)}\n            onSave={() => {\n              setShowTransactionForm(false);\n              refreshData();\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}